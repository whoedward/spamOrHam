De: Michael Wang <michaelwang2016@u.northwestern.edu>
Fecha: 5/27/2013 6:03 PM
Para: ethanrobison2016@u.northwestern.edu



diffeq.m

function F = diffeq(t,v)

%F(1) is v'
%F(2) is u' or v''
%F(3) is dA/dt
%v(1) is v
%v(2) is v'
%v(3) is A
%v(4) is omega

F = zeros(4,1);
F(1) = v(2);
F(2) = -(800)*v(1)^3-v(1)-(2*0.09)*v(2)+sin(v(4)*t);
F(3) = -(0.5)*(1/v(4))*(v(1)*F(2)-v(2)*v(2));
F(4) = 0;

end


solver.m

clear
clc

%time variable
i = 1;

for omega = 0.8

period = (2*pi)/omega;
timestep = 0:period:10000*period;       %this runs ode45 for 500 periods

%{
%run ode45 for initial conditions [0 0 0 omega], and find whether it is
%periodic or not
[t,v] = ode45(@diffeq, timestep, [0 0 0 omega]);
difference_v = abs(v(end,1)-v(1,1));  %these calculate error
difference_u = abs(v(end,2)-v(1,2));
    
%run ode45 for new conditions and check for periodicity
while difference_v > 10e-4 && difference_u > 10e-4
    [t,v] = ode45(@diffeq, timestep, [v(end,1) v(end,2) 0 omega]);
    difference_v = abs(v(end,1)-v(1,1));
    difference_u = abs(v(end,2)-v(1,2));
end
%}

[t,v] = ode45(@diffeq, timestep, [0 0 0 omega]);
plot(v(:,1),v(:,2));
pause

%display the correct periodic intial values
disp(v(end,1));
disp(v(end,2));

%run the periodic case for one period to find the amplitude but take data
%at every interval that ode45 integrates over
[t,v] = ode45(@diffeq, [0 (2*pi)/omega], [v(end,1) v(end,2) 0 omega]);

%this acts as a check to make sure the initial values were chosen correctly
%plot(t,v(:,1));
%pause

%this plots the closed curve
%plot(v(:,1),v(:,2));

%this stores the values of omega and the period so they can be graphed
x(i,1) = omega;
x(i,2) = sqrt(v(end,3)/pi);

%step up time variable for storage
i = i+1;

end

%plot(x(:,1),x(:,2));

%{
while flag ~= 1
    for v_init = -25:1:50
        t = 0;
        v = 0;
        
        [t,v] = ode45(@diffeq, [0 500*pi], [0 0]);
        
        disp(v(end,1)-v(1,1));
        disp(v(end,2)-v(1,2));
        
        if abs(v(end,1)-v(1,1)) < 10e-4
            v_init_final = v_init;
            flag = 1;
        end
    end
end
%}        
    
%{    
    for u_init = -1:0.01:1
        
        %status bar
        disp(i);
        
        %use ode45 to test the initial values
        [t,v] = ode45(@diffeq, timespan, [v_init u_init]);
        
        disp(v(end,1)-v(1,1));
        disp(v(end,2)^2-v(1,2)^2);
            
        if abs(v(end,1)-v(1,1)) < 10e-4 && abs(v(end,2)-v(1,2)) < 10e-4

        end
        
        i=i+1;
    end
end
%}

%{
plot(t,v(:,1))
plot(v(:,2),v(:,1));

error calculations
for i = 2:1:ceil(final_time/period)
    
    error = sqrt(v(i,1)^2-v(i-1,1)^2);
    
    if error < 10e-4
       x = i;
       disp(v(i,:));
       break
    end
end
%}

%{
%re-run ode45, stopping at the point where the difference between the
%periods is less than the error
%tspan2 = [0 i*period];
%[t,v] = ode45(@diffeq, tspan2, [0 0]);


%plot(t,v(:,1))
%plot(v(:,2),v(:,1));
%}


Adjuntos:
diffeq.m	284 bytes
solver.m	2.5 KB